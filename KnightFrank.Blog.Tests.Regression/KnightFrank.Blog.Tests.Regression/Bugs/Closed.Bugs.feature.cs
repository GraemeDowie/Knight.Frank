// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace KnightFrank.Blog.Tests.Regression.Bugs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Closed Bugs")]
    public partial class ClosedBugsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Closed.Bugs.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Closed Bugs", "Closed/resolved bug fixes will have an automated test run to ensure we do not re-" +
                    "introduce issues", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("User has visited a new office page and the email button is alled Contact Office")]
        public virtual void UserHasVisitedANewOfficePageAndTheEmailButtonIsAlledContactOffice()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User has visited a new office page and the email button is alled Contact Office", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("user has visited the commercial leeds office page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "contactEmailButton"});
            table1.AddRow(new string[] {
                        "Contact Office"});
#line 8
 testRunner.Then("user should see an email button labelled Contact Office", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Searching for China on Knighfrank.com.cn no longer returns an error")]
        [NUnit.Framework.TestCaseAttribute("Knight Frank Beijing", null)]
        [NUnit.Framework.TestCaseAttribute("Knight Frank Guangzhou", null)]
        [NUnit.Framework.TestCaseAttribute("Knight Frank Shanghai", null)]
        [NUnit.Framework.TestCaseAttribute("Knight Frank Hong Kong", null)]
        public virtual void SearchingForChinaOnKnighfrank_Com_CnNoLongerReturnsAnError(string chinaOffice, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Searching for China on Knighfrank.com.cn no longer returns an error", exampleTags);
#line 14
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "kfChina"});
            table2.AddRow(new string[] {
                        "http://beta.knightfrank.com.cn/en"});
#line 15
 testRunner.Given("User has visited Knight Frank China Domain", ((string)(null)), table2, "Given ");
#line 18
 testRunner.When("user clicks on the people office tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "officeSearch"});
            table3.AddRow(new string[] {
                        "China"});
#line 19
  testRunner.And("searches for China", ((string)(null)), table3, "And ");
#line 22
 testRunner.Then(string.Format("user should see a list of office locations in China {0}", chinaOffice), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Office search via the services or research tab returns results")]
        public virtual void OfficeSearchViaTheServicesOrResearchTabReturnsResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Office search via the services or research tab returns results", ((string[])(null)));
#line 33
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "researchURL"});
            table4.AddRow(new string[] {
                        "http://beta.knightfrank.co.uk/research"});
#line 34
 testRunner.Given("user is on the Knight Frank research page", ((string)(null)), table4, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "officeSearchLocation"});
            table5.AddRow(new string[] {
                        "Soho"});
#line 37
 testRunner.When("user selects the people office tab and searches for an office", ((string)(null)), table5, "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "returnedResult"});
            table6.AddRow(new string[] {
                        "Knight Frank Soho"});
#line 40
 testRunner.Then("user should see a returned office search with the search location", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Link to contact agent profile Url takes user to correct profile page")]
        public virtual void LinkToContactAgentProfileUrlTakesUserToCorrectProfilePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Link to contact agent profile Url takes user to correct profile page", ((string[])(null)));
#line 45
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "teamPage"});
            table7.AddRow(new string[] {
                        "http://beta.knightfrank.com/commercial/global-capital-markets/team"});
#line 46
 testRunner.Given("user has visited a Knight Frank Team page on .com", ((string)(null)), table7, "Given ");
#line 49
  testRunner.And("selects to view a colleague profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "colleagueURL",
                        "ContactName"});
            table8.AddRow(new string[] {
                        "http://beta.knightfrank.com/contact#/people/andrew-sim-00000085",
                        "Andrew Sim"});
#line 50
 testRunner.Then("user should be directed to the correct colleague page", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
