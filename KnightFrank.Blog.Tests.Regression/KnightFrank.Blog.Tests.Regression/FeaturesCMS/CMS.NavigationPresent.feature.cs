// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace KnightFrank.Blog.Tests.Regression.FeaturesCMS
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CMS Navigation")]
    public partial class CMSNavigationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CMS.NavigationPresent.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CMS Navigation", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line 4
 testRunner.Given("user has visited the knight frank homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Global Navigation is visible")]
        [NUnit.Framework.TestCaseAttribute("Properties", null)]
        [NUnit.Framework.TestCaseAttribute("People / Offices", null)]
        [NUnit.Framework.TestCaseAttribute("Services", null)]
        [NUnit.Framework.TestCaseAttribute("Research", null)]
        [NUnit.Framework.TestCaseAttribute("Blog", null)]
        public virtual void GlobalNavigationIsVisible(string greenNav, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Global Navigation is visible", exampleTags);
#line 6
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 7
 testRunner.Then(string.Format("user should see {0} Green Navigation", greenNav), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search box tabs are visible")]
        [NUnit.Framework.TestCaseAttribute("Residential", null)]
        [NUnit.Framework.TestCaseAttribute("Commercial", null)]
        [NUnit.Framework.TestCaseAttribute("People / Offices", null)]
        [NUnit.Framework.TestCaseAttribute("Services", null)]
        [NUnit.Framework.TestCaseAttribute("Research", null)]
        public virtual void SearchBoxTabsAreVisible(string searchTabs, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search box tabs are visible", exampleTags);
#line 18
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 19
 testRunner.Then(string.Format("user should see {0} Search Tabs", searchTabs), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Global Nav is Visible after searching")]
        [NUnit.Framework.TestCaseAttribute("London", "Country: Global", null)]
        [NUnit.Framework.TestCaseAttribute("London", "About", null)]
        [NUnit.Framework.TestCaseAttribute("London", "Careers", null)]
        [NUnit.Framework.TestCaseAttribute("London", "Contact us", null)]
        [NUnit.Framework.TestCaseAttribute("London", "My Knight Frank", null)]
        public virtual void GlobalNavIsVisibleAfterSearching(string location, string globalNav, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Global Nav is Visible after searching", exampleTags);
#line 29
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 30
 testRunner.When(string.Format("user searchs for {0} location", location), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
 testRunner.When(string.Format("results are returned the {0} Global Navigation should be visible", globalNav), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
